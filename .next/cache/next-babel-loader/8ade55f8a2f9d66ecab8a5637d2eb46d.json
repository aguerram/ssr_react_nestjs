{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", null, \"Hello world this is react rendering 2 \", props.query.message);\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = ctx.query;\n            return _context.abrupt(\"return\", {\n              query: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/agurr/Desktop/next app/nest-next-example/pages/views/Index.tsx"],"names":["React","Index","props","query","message","getInitialProps","ctx"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAOA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,CAACC,KAAD,EAAkB;AAC/C,SAAO,6DAA4CA,KAAK,CAACC,KAAN,CAAYC,OAAxD,CAAP;AACD,CAFD;;AAGAH,KAAK,CAACI,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdH,YAAAA,KADc,GACJG,GADI,CACdH,KADc;AAAA,6CAEf;AAAEA,cAAAA,KAAK,EAALA;AAAF,aAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeF,KAAf","sourcesContent":["import * as React from 'react';\r\nimport { NextPage, NextPageContext } from 'next';\r\n\r\ninterface Props {\r\n  query: { message?: string };\r\n}\r\n\r\nconst Index: NextPage<Props> = (props: Props) => {\r\n  return <div>Hello world this is react rendering 2 {props.query.message}</div>;\r\n};\r\nIndex.getInitialProps = async (ctx: NextPageContext) => {\r\n  const { query } = ctx;\r\n  return { query };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}